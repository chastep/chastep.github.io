{"version":3,"file":"3dc5b2a721de29dae1c73550885cf78d1a2e178b-7e59866e8e676bedbab3.js","mappings":"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","sources":["webpack://chastep.github.io/./src/components/sidebar-menu/sidebar-menu.tsx","webpack://chastep.github.io/./src/components/sidebar-menu/sidebar-menu.module.scss","webpack://chastep.github.io/./src/components/image/image.tsx","webpack://chastep.github.io/./src/components/sidebar-author/sidebar-author.module.scss","webpack://chastep.github.io/./src/components/sidebar-author/sidebar-author.tsx","webpack://chastep.github.io/./src/components/icon/icon.tsx","webpack://chastep.github.io/./src/components/icon/icon.module.scss","webpack://chastep.github.io/./src/constants/icons.ts","webpack://chastep.github.io/./src/utils/get-icon.ts","webpack://chastep.github.io/./src/components/sidebar-contacts/sidebar-contacts.module.scss","webpack://chastep.github.io/./src/components/sidebar-contacts/sidebar-contacts.tsx","webpack://chastep.github.io/./src/components/sidebar-copyright/sidebar-copyright.tsx","webpack://chastep.github.io/./src/components/sidebar-copyright/sidebar-copyright.module.scss","webpack://chastep.github.io/./src/components/sidebar/sidebar.tsx","webpack://chastep.github.io/./src/components/sidebar/sidebar.module.scss","webpack://chastep.github.io/./src/components/theme-switcher/theme-switcher.module.scss","webpack://chastep.github.io/./src/components/theme-switcher/theme-switcher.tsx","webpack://chastep.github.io/./src/utils/get-contact-href.ts","webpack://chastep.github.io/./src/hooks/use-site-metadata.ts","webpack://chastep.github.io/../src/image-utils.ts","webpack://chastep.github.io/../src/components/hooks.ts","webpack://chastep.github.io/../src/components/layout-wrapper.tsx","webpack://chastep.github.io/../src/components/picture.tsx","webpack://chastep.github.io/../src/components/placeholder.tsx","webpack://chastep.github.io/../src/components/main-image.tsx","webpack://chastep.github.io/../src/components/gatsby-image.server.tsx","webpack://chastep.github.io/../src/components/gatsby-image.browser.tsx","webpack://chastep.github.io/../src/components/static-image.server.tsx","webpack://chastep.github.io/../src/components/static-image.tsx","webpack://chastep.github.io/./node_modules/camelcase/index.js","webpack://chastep.github.io/./src/components/meta/meta.tsx","webpack://chastep.github.io/./src/components/layout/layout.tsx","webpack://chastep.github.io/./src/components/layout/layout.module.scss","webpack://chastep.github.io/./node_modules/classnames/index.js","webpack://chastep.github.io/./node_modules/@alxshelepenok/react-hooks/target/react-hooks.es5.js","webpack://chastep.github.io/./node_modules/@alxshelepenok/diesel-extensions/target/diesel-extensions.es5.js","webpack://chastep.github.io/./src/hooks/use-theme.ts","webpack://chastep.github.io/./src/utils/get-default-color-mode.ts","webpack://chastep.github.io/./src/components/page/page.tsx","webpack://chastep.github.io/./src/components/page/page.module.scss"],"sourcesContent":["import React, { type FC } from \"react\";\n\nimport { Link } from \"gatsby\";\n\nimport * as styles from \"./sidebar-menu.module.scss\";\n\ntype SidebarMenuProps = {\n  menu: Array<{\n    title: string;\n    url: string;\n  }>;\n};\n\nconst SidebarMenu: FC<SidebarMenuProps> = ({ menu }) => (\n  <nav className={styles.sidebarMenu}>\n    <ul className={styles.list}>\n      {menu.map((item) => (\n        <li className={styles.item} key={item.url}>\n          <Link\n            to={item.url}\n            className={styles.link}\n            activeClassName={styles.active}\n          >\n            {item.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </nav>\n);\n\nexport { SidebarMenu };\n","// extracted by mini-css-extract-plugin\nexport var active = \"sidebar-menu-module--active--0ae28\";\nexport var item = \"sidebar-menu-module--item--67667\";\nexport var link = \"sidebar-menu-module--link--b41cc\";\nexport var list = \"sidebar-menu-module--list--11f39\";\nexport var sidebarMenu = \"sidebar-menu-module--sidebar-menu--a1f76\";","import React, { type FC } from \"react\";\n\nimport { graphql, StaticQuery } from \"gatsby\";\nimport { type FileSystemNode } from \"gatsby-source-filesystem\";\nimport { GatsbyImage, type GatsbyImageProps, type IGatsbyImageData } from \"gatsby-plugin-image\";\n\ninterface ImageProps extends Omit<GatsbyImageProps, \"image\"> {\n  path: string;\n}\n\ninterface Data {\n  images: {\n    edges: Array<{\n      node: FileSystemNode & {\n        childImageSharp: {\n          gatsbyImageData: IGatsbyImageData;\n        };\n      };\n    }>;\n  };\n}\n\nconst Image: FC<ImageProps> = ({ path, ...rest }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        images: allFile(\n          filter: { ext: { regex: \"/png|jpg|jpeg|webp|tif|tiff/\" } }\n        ) {\n          edges {\n            node {\n              absolutePath\n              childImageSharp {\n                gatsbyImageData(formats: [AUTO, WEBP, AVIF])\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data: Data) => {\n      const { images: { edges = [] } = {} } = data;\n      const image = edges.find(({ node }) => node.absolutePath.includes(path));\n\n      if (!image) {\n        return null;\n      }\n\n      const {\n        node: { childImageSharp },\n      } = image;\n\n      return <GatsbyImage {...rest} image={childImageSharp.gatsbyImageData} />;\n    }}\n  />\n);\n\nexport { Image };\n","// extracted by mini-css-extract-plugin\nexport var description = \"sidebar-author-module--description--05f75\";\nexport var link = \"sidebar-author-module--link--45332\";\nexport var photo = \"sidebar-author-module--photo--d388f\";\nexport var sidebarAuthor = \"sidebar-author-module--sidebar-author--f2c33\";\nexport var title = \"sidebar-author-module--title--a6921\";\nexport var titleContainer = \"sidebar-author-module--titleContainer--335a3\";","import React, { type FC } from \"react\";\nimport { Link } from \"gatsby\";\n\nimport { Image } from \"@/components/image\";\nimport { ThemeSwitcher } from \"@/components/theme-switcher\";\n\nimport * as styles from \"./sidebar-author.module.scss\";\n\ntype SidebarAuthorProps = {\n  author: {\n    title: string;\n    photo: string;\n    description: string;\n  };\n  isHome?: boolean;\n};\n\nconst SidebarAuthor: FC<SidebarAuthorProps> = ({ author, isHome }) => (\n  <div className={styles.sidebarAuthor}>\n    <Link to=\"/\">\n      <Image alt={author.title} path={author.photo} className={styles.photo} />\n    </Link>\n\n    <div className={styles.titleContainer}>\n      {isHome ? (\n        <h1 className={styles.title}>\n          <Link className={styles.link} to=\"/\">\n            {author.title}\n          </Link>\n        </h1>\n      ) : (\n        <h2 className={styles.title}>\n          <Link className={styles.link} to=\"/\">\n            {author.title}\n          </Link>\n        </h2>\n      )}\n      <ThemeSwitcher />\n    </div>\n    <p className={styles.description}>{author.description}</p>\n  </div>\n);\n\nexport { SidebarAuthor };\n","import React, { type FC } from \"react\";\n\nimport { icons } from \"@/constants/icons\";\n\nimport * as styles from \"./icon.module.scss\";\n\ninterface IconProps {\n  name: keyof typeof icons;\n  icon: {\n    path?: string;\n    viewBox?: string;\n  };\n}\n\nconst Icon: FC<IconProps> = ({ name, icon }) => (\n  <svg className={styles.icon} viewBox={icon.viewBox}>\n    <title>{name}</title>\n    <path d={icon.path} />\n  </svg>\n);\n\nexport { Icon };\n","// extracted by mini-css-extract-plugin\nexport var icon = \"icon-module--icon--1a7c5\";","const icons = {\n  x: {\n    path: \"M14.095479,10.316482L22.286354,1h-1.940718l-7.115352,8.087682L7.551414,1H1l8.589488,12.231093L1,23h1.940717  l7.509372-8.542861L16.448587,23H23L14.095479,10.316482z M11.436522,13.338465l-0.871624-1.218704l-6.924311-9.68815h2.981339  l5.58978,7.82155l0.867949,1.218704l7.26506,10.166271h-2.981339L11.436522,13.338465z\",\n    viewBox: \"0 0 24 24\",\n  },\n  facebook: {\n    path: \"M14.984 0.187v4.125h-2.453c-1.922 0-2.281 0.922-2.281 2.25v2.953h4.578l-0.609 4.625h-3.969v11.859h-4.781v-11.859h-3.984v-4.625h3.984v-3.406c0-3.953 2.422-6.109 5.953-6.109 1.687 0 3.141 0.125 3.563 0.187z\",\n    viewBox: \"0 0 16 28\",\n  },\n  telegram: {\n    path: \"M27.563 0.172c0.328 0.234 0.484 0.609 0.422 1l-4 24c-0.047 0.297-0.234 0.547-0.5 0.703-0.141 0.078-0.313 0.125-0.484 0.125-0.125 0-0.25-0.031-0.375-0.078l-7.078-2.891-3.781 4.609c-0.187 0.234-0.469 0.359-0.766 0.359-0.109 0-0.234-0.016-0.344-0.063-0.391-0.141-0.656-0.516-0.656-0.938v-5.453l13.5-16.547-16.703 14.453-6.172-2.531c-0.359-0.141-0.594-0.469-0.625-0.859-0.016-0.375 0.172-0.734 0.5-0.922l26-15c0.156-0.094 0.328-0.141 0.5-0.141 0.203 0 0.406 0.063 0.562 0.172z\",\n    viewBox: \"0 0 28 28\",\n  },\n  github: {\n    path: \"M10 19c0 1.141-0.594 3-2 3s-2-1.859-2-3 0.594-3 2-3 2 1.859 2 3zM20 19c0 1.141-0.594 3-2 3s-2-1.859-2-3 0.594-3 2-3 2 1.859 2 3zM22.5 19c0-2.391-1.453-4.5-4-4.5-1.031 0-2.016 0.187-3.047 0.328-0.812 0.125-1.625 0.172-2.453 0.172s-1.641-0.047-2.453-0.172c-1.016-0.141-2.016-0.328-3.047-0.328-2.547 0-4 2.109-4 4.5 0 4.781 4.375 5.516 8.188 5.516h2.625c3.813 0 8.188-0.734 8.188-5.516zM26 16.25c0 1.734-0.172 3.578-0.953 5.172-2.063 4.172-7.734 4.578-11.797 4.578-4.125 0-10.141-0.359-12.281-4.578-0.797-1.578-0.969-3.437-0.969-5.172 0-2.281 0.625-4.438 2.125-6.188-0.281-0.859-0.422-1.766-0.422-2.656 0-1.172 0.266-2.344 0.797-3.406 2.469 0 4.047 1.078 5.922 2.547 1.578-0.375 3.203-0.547 4.828-0.547 1.469 0 2.953 0.156 4.375 0.5 1.859-1.453 3.437-2.5 5.875-2.5 0.531 1.062 0.797 2.234 0.797 3.406 0 0.891-0.141 1.781-0.422 2.625 1.5 1.766 2.125 3.938 2.125 6.219z\",\n    viewBox: \"0 0 26 28\",\n  },\n  email: {\n    path: \"M26 23.5v-12c-0.328 0.375-0.688 0.719-1.078 1.031-2.234 1.719-4.484 3.469-6.656 5.281-1.172 0.984-2.625 2.188-4.25 2.188h-0.031c-1.625 0-3.078-1.203-4.25-2.188-2.172-1.813-4.422-3.563-6.656-5.281-0.391-0.313-0.75-0.656-1.078-1.031v12c0 0.266 0.234 0.5 0.5 0.5h23c0.266 0 0.5-0.234 0.5-0.5zM26 7.078c0-0.391 0.094-1.078-0.5-1.078h-23c-0.266 0-0.5 0.234-0.5 0.5 0 1.781 0.891 3.328 2.297 4.438 2.094 1.641 4.188 3.297 6.266 4.953 0.828 0.672 2.328 2.109 3.422 2.109h0.031c1.094 0 2.594-1.437 3.422-2.109 2.078-1.656 4.172-3.313 6.266-4.953 1.016-0.797 2.297-2.531 2.297-3.859zM28 6.5v17c0 1.375-1.125 2.5-2.5 2.5h-23c-1.375 0-2.5-1.125-2.5-2.5v-17c0-1.375 1.125-2.5 2.5-2.5h23c1.375 0 2.5 1.125 2.5 2.5z\",\n    viewBox: \"0 0 28 28\",\n  },\n  rss: {\n    path: \"M6 21c0 1.656-1.344 3-3 3s-3-1.344-3-3 1.344-3 3-3 3 1.344 3 3zM14 22.922c0.016 0.281-0.078 0.547-0.266 0.75-0.187 0.219-0.453 0.328-0.734 0.328h-2.109c-0.516 0-0.938-0.391-0.984-0.906-0.453-4.766-4.234-8.547-9-9-0.516-0.047-0.906-0.469-0.906-0.984v-2.109c0-0.281 0.109-0.547 0.328-0.734 0.172-0.172 0.422-0.266 0.672-0.266h0.078c3.328 0.266 6.469 1.719 8.828 4.094 2.375 2.359 3.828 5.5 4.094 8.828zM22 22.953c0.016 0.266-0.078 0.531-0.281 0.734-0.187 0.203-0.438 0.313-0.719 0.313h-2.234c-0.531 0-0.969-0.406-1-0.938-0.516-9.078-7.75-16.312-16.828-16.844-0.531-0.031-0.938-0.469-0.938-0.984v-2.234c0-0.281 0.109-0.531 0.313-0.719 0.187-0.187 0.438-0.281 0.688-0.281h0.047c5.469 0.281 10.609 2.578 14.484 6.469 3.891 3.875 6.188 9.016 6.469 14.484z\",\n    viewBox: \"0 0 22 28\",\n  },\n  linkedin: {\n    path: \"M4.98 3.5c0 1.381-1.11 2.5-2.48 2.5s-2.48-1.119-2.48-2.5c0-1.38 1.11-2.5 2.48-2.5s2.48 1.12 2.48 2.5zm.02 4.5h-5v16h5v-16zm7.982 0h-4.968v16h4.969v-8.399c0-4.67 6.029-5.052 6.029 0v8.399h4.988v-10.131c0-7.88-8.922-7.593-11.018-3.714v-2.155z\",\n    viewBox: \"0 0 24 24\",\n  },\n  instagram: {\n    path: \"M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z\",\n    viewBox: \"0 0 24 24\",\n  },\n  line: {\n    path: \"M24 10.304c0-5.369-5.383-9.738-12-9.738-6.616 0-12 4.369-12 9.738 0 4.814 4.269 8.846 10.036 9.608.391.084.922.258 1.057.592.121.303.079.778.039 1.085l-.171 1.027c-.053.303-.242 1.186 1.039.647 1.281-.54 6.911-4.069 9.428-6.967 1.739-1.907 2.572-3.843 2.572-5.992zm-18.988-2.595c.129 0 .234.105.234.234v4.153h2.287c.129 0 .233.104.233.233v.842c0 .129-.104.234-.233.234h-3.363c-.063 0-.119-.025-.161-.065l-.001-.001-.002-.002-.001-.001-.003-.003c-.04-.042-.065-.099-.065-.161v-5.229c0-.129.104-.234.233-.234h.842zm14.992 0c.129 0 .233.105.233.234v.842c0 .129-.104.234-.233.234h-2.287v.883h2.287c.129 0 .233.105.233.234v.842c0 .129-.104.234-.233.234h-2.287v.884h2.287c.129 0 .233.105.233.233v.842c0 .129-.104.234-.233.234h-3.363c-.063 0-.12-.025-.162-.065l-.003-.004-.003-.003c-.04-.042-.066-.099-.066-.161v-5.229c0-.062.025-.119.065-.161l.004-.004.003-.003c.042-.04.099-.066.162-.066h3.363zm-10.442.001c.129 0 .234.104.234.233v5.229c0 .128-.105.233-.234.233h-.842c-.129 0-.234-.105-.234-.233v-5.229c0-.129.105-.233.234-.233h.842zm2.127 0h.008l.012.001.013.001.01.001.013.003.008.003.014.004.008.003.013.006.007.003.013.007.007.004.012.009.006.004.013.011.004.004.014.014.002.002.018.023 2.396 3.236v-3.106c0-.129.105-.233.234-.233h.841c.13 0 .234.104.234.233v5.229c0 .128-.104.233-.234.233h-.841l-.06-.008-.004-.001-.015-.005-.007-.003-.012-.004-.011-.006-.007-.003-.014-.009-.002-.002-.06-.058-2.399-3.24v3.106c0 .128-.104.233-.234.233h-.841c-.129 0-.234-.105-.234-.233v-5.229c0-.129.105-.233.234-.233h.841z\",\n    viewBox: \"0 0 24 24\",\n  },\n  gitlab: {\n    path: \"M 38.011719 4 C 37.574219 3.996094 37.183594 4.273438 37.046875 4.691406 L 32.074219 20 L 17.925781 20 L 12.953125 4.691406 C 12.820313 4.289063 12.449219 4.011719 12.023438 4 C 11.597656 3.992188 11.214844 4.25 11.0625 4.648438 L 5.070313 20.640625 C 5.066406 20.640625 5.066406 20.644531 5.0625 20.648438 L 2.0625 28.648438 C 1.90625 29.070313 2.046875 29.542969 2.414063 29.808594 L 24.40625 45.800781 L 24.410156 45.808594 C 24.414063 45.808594 24.414063 45.808594 24.414063 45.8125 C 24.425781 45.820313 24.441406 45.828125 24.453125 45.835938 C 24.46875 45.84375 24.480469 45.855469 24.496094 45.863281 C 24.5 45.863281 24.5 45.867188 24.503906 45.867188 C 24.503906 45.867188 24.507813 45.871094 24.511719 45.871094 C 24.515625 45.875 24.519531 45.878906 24.527344 45.878906 C 24.53125 45.882813 24.539063 45.886719 24.542969 45.890625 C 24.5625 45.898438 24.585938 45.910156 24.609375 45.917969 C 24.609375 45.917969 24.609375 45.917969 24.609375 45.921875 C 24.632813 45.929688 24.65625 45.9375 24.675781 45.945313 C 24.679688 45.945313 24.679688 45.945313 24.683594 45.949219 C 24.699219 45.953125 24.714844 45.957031 24.734375 45.964844 C 24.742188 45.964844 24.75 45.96875 24.761719 45.96875 C 24.761719 45.972656 24.761719 45.972656 24.761719 45.96875 C 24.78125 45.976563 24.800781 45.980469 24.820313 45.984375 C 24.847656 45.988281 24.871094 45.992188 24.898438 45.996094 C 24.9375 45.996094 24.980469 46 25.019531 46 C 25.058594 45.996094 25.09375 45.996094 25.128906 45.988281 C 25.144531 45.988281 25.15625 45.988281 25.171875 45.984375 C 25.171875 45.984375 25.175781 45.984375 25.179688 45.984375 C 25.1875 45.980469 25.191406 45.980469 25.199219 45.980469 C 25.203125 45.980469 25.207031 45.976563 25.214844 45.976563 C 25.222656 45.972656 25.234375 45.972656 25.242188 45.96875 C 25.257813 45.964844 25.269531 45.960938 25.28125 45.957031 C 25.289063 45.957031 25.292969 45.957031 25.296875 45.953125 C 25.300781 45.953125 25.304688 45.953125 25.308594 45.953125 C 25.324219 45.945313 25.34375 45.9375 25.359375 45.933594 C 25.378906 45.925781 25.394531 45.917969 25.410156 45.910156 C 25.414063 45.910156 25.414063 45.910156 25.417969 45.90625 C 25.421875 45.90625 25.425781 45.90625 25.429688 45.902344 C 25.4375 45.898438 25.445313 45.894531 25.453125 45.890625 C 25.476563 45.878906 25.496094 45.867188 25.515625 45.855469 C 25.523438 45.851563 25.527344 45.847656 25.53125 45.84375 C 25.535156 45.84375 25.539063 45.839844 25.542969 45.839844 C 25.558594 45.828125 25.574219 45.820313 25.589844 45.808594 L 25.597656 45.796875 L 47.589844 29.808594 C 47.953125 29.542969 48.09375 29.070313 47.9375 28.648438 L 44.945313 20.675781 C 44.941406 20.667969 44.9375 20.65625 44.9375 20.648438 L 38.9375 4.648438 C 38.789063 4.261719 38.425781 4.003906 38.011719 4 Z M 8.066406 22 L 16.472656 22 L 22.328125 40.015625 Z M 33.527344 22 L 41.933594 22 L 27.671875 40.015625 Z M 6.3125 23.007813 L 19.6875 39.902344 L 4.203125 28.640625 Z M 43.6875 23.007813 L 45.796875 28.640625 L 30.3125 39.902344 Z\",\n    viewBox: \"0 0 50 50\",\n  },\n  weibo: {\n    path: \"M 16.28125 3.8125 C 16.054688 3.828125 15.816406 3.859375 15.59375 3.90625 C 15.179688 3.996094 14.910156 4.402344 15 4.8125 C 15.085938 5.226563 15.492188 5.496094 15.90625 5.40625 C 17.179688 5.136719 18.566406 5.53125 19.5 6.5625 C 20.433594 7.597656 20.679688 9.011719 20.28125 10.25 C 20.152344 10.652344 20.378906 11.089844 20.78125 11.21875 C 21.183594 11.347656 21.617188 11.121094 21.75 10.71875 C 22.3125 8.976563 21.96875 7.015625 20.65625 5.5625 C 19.671875 4.46875 18.296875 3.875 16.9375 3.8125 C 16.710938 3.800781 16.507813 3.796875 16.28125 3.8125 Z M 10.0625 6.09375 C 8.667969 6.242188 6.699219 7.332031 4.96875 9.0625 C 3.082031 10.949219 2 12.957031 2 14.6875 C 2 17.996094 6.226563 20 10.375 20 C 15.8125 20 19.4375 16.820313 19.4375 14.3125 C 19.4375 12.796875 18.179688 11.949219 17.03125 11.59375 C 16.75 11.507813 16.539063 11.464844 16.6875 11.09375 C 17.007813 10.289063 17.066406 9.589844 16.71875 9.09375 C 16.070313 8.164063 14.253906 8.210938 12.21875 9.0625 C 12.21875 9.0625 11.585938 9.351563 11.75 8.84375 C 12.0625 7.835938 12.019531 6.988281 11.53125 6.5 C 11.1875 6.152344 10.695313 6.027344 10.0625 6.09375 Z M 16.8125 6.5 C 16.589844 6.488281 16.375 6.515625 16.15625 6.5625 C 15.800781 6.636719 15.578125 7.019531 15.65625 7.375 C 15.734375 7.730469 16.082031 7.953125 16.4375 7.875 C 16.863281 7.785156 17.34375 7.902344 17.65625 8.25 C 17.96875 8.597656 18.042969 9.054688 17.90625 9.46875 C 17.792969 9.816406 17.964844 10.199219 18.3125 10.3125 C 18.660156 10.421875 19.046875 10.253906 19.15625 9.90625 C 19.429688 9.058594 19.265625 8.085938 18.625 7.375 C 18.144531 6.84375 17.476563 6.53125 16.8125 6.5 Z M 10.8125 10.90625 C 13.582031 11.003906 15.8125 12.378906 16 14.28125 C 16.214844 16.457031 13.71875 18.484375 10.40625 18.8125 C 7.09375 19.140625 4.214844 17.640625 4 15.46875 C 3.785156 13.292969 6.316406 11.265625 9.625 10.9375 C 10.039063 10.898438 10.417969 10.890625 10.8125 10.90625 Z M 8.9375 13 C 7.804688 13.101563 6.734375 13.75 6.25 14.6875 C 5.589844 15.964844 6.242188 17.378906 7.75 17.84375 C 9.308594 18.324219 11.140625 17.597656 11.78125 16.21875 C 12.410156 14.871094 11.605469 13.472656 10.0625 13.09375 C 9.691406 13 9.316406 12.964844 8.9375 13 Z M 8.21875 15.0625 C 8.351563 15.066406 8.472656 15.109375 8.59375 15.15625 C 9.082031 15.355469 9.234375 15.878906 8.9375 16.34375 C 8.632813 16.804688 7.988281 17.027344 7.5 16.8125 C 7.019531 16.601563 6.882813 16.074219 7.1875 15.625 C 7.414063 15.289063 7.824219 15.058594 8.21875 15.0625 Z\",\n    viewBox: \"2 2 19 19\",\n  },\n  codepen: {\n    path: \"M24 8.182l-.018-.087-.017-.05c-.01-.024-.018-.05-.03-.075-.003-.018-.015-.034-.02-.05l-.035-.067-.03-.05-.044-.06-.046-.045-.06-.045-.046-.03-.06-.044-.044-.04-.015-.02L12.58.19c-.347-.232-.796-.232-1.142 0L.453 7.502l-.015.015-.044.035-.06.05-.038.04-.05.056-.037.045-.05.06c-.02.017-.03.03-.03.046l-.05.06-.02.06c-.02.01-.02.04-.03.07l-.01.05C0 8.12 0 8.15 0 8.18v7.497c0 .044.003.09.01.135l.01.046c.005.03.01.06.02.086l.015.05c.01.027.016.053.027.075l.022.05c0 .01.015.04.03.06l.03.04c.015.01.03.04.045.06l.03.04.04.04c.01.013.01.03.03.03l.06.042.04.03.01.014 10.97 7.33c.164.12.375.163.57.163s.39-.06.57-.18l10.99-7.28.014-.01.046-.037.06-.043.048-.036.052-.058.033-.045.04-.06.03-.05.03-.07.016-.052.03-.077.015-.045.03-.08v-7.5c0-.05 0-.095-.016-.14l-.014-.045.044.003zm-11.99 6.28l-3.65-2.44 3.65-2.442 3.65 2.44-3.65 2.44zm-1.034-6.674l-4.473 2.99L2.89 8.362l8.086-5.39V7.79zm-6.33 4.233l-2.582 1.73V10.3l2.582 1.726zm1.857 1.25l4.473 2.99v4.82L2.89 15.69l3.618-2.417v-.004zm6.537 2.99l4.474-2.98 3.613 2.42-8.087 5.39v-4.82zm6.33-4.23l2.583-1.72v3.456l-2.583-1.73zm-1.855-1.24L13.042 7.8V2.97l8.085 5.39-3.612 2.415v.003z\",\n    viewBox: \"0 0 24 24\",\n  },\n  youtube: {\n    path: \"M21.582,6.186c-0.23-0.86-0.908-1.538-1.768-1.768C18.254,4,12,4,12,4S5.746,4,4.186,4.418 c-0.86,0.23-1.538,0.908-1.768,1.768C2,7.746,2,12,2,12s0,4.254,0.418,5.814c0.23,0.86,0.908,1.538,1.768,1.768 C5.746,20,12,20,12,20s6.254,0,7.814-0.418c0.861-0.23,1.538-0.908,1.768-1.768C22,16.254,22,12,22,12S22,7.746,21.582,6.186z M10,15.464V8.536L16,12L10,15.464z\",\n    viewBox: \"0 0 24 24\",\n  },\n  soundcloud: {\n    path: \"M 14.5 6 C 12.601563 6 11 6.90625 10 8.40625 L 10 17 L 20.5 17 C 22.398438 17 24 15.398438 24 13.5 C 24 11.601563 22.398438 10 20.5 10 C 20.300781 10 20.011719 9.992188 19.8125 10.09375 C 19.210938 7.695313 17 6 14.5 6 Z M 8 8 L 8 17 L 9 17 L 9 8.09375 C 8.699219 7.992188 8.300781 8 8 8 Z M 7 8.09375 C 6.601563 8.195313 6.300781 8.398438 6 8.5 L 6 17 L 7 17 Z M 5 9.40625 C 4.5 9.90625 4.195313 10.488281 4.09375 11.1875 L 4 11.1875 L 4 17 L 5 17 Z M 3 11 C 2.601563 11 2.300781 11.085938 2 11.1875 L 2 16.8125 C 2.300781 16.914063 2.601563 17 3 17 Z M 1 11.8125 C 0.398438 12.3125 0 13.101563 0 14 C 0 14.898438 0.398438 15.6875 1 16.1875 Z\",\n    viewBox: \"0 0 24 24\",\n  },\n  medium: {\n    path: \"M2.846 6.887a.928.928 0 00-.303-.784l-2.24-2.7V3h6.958l5.378 11.795L17.367 3H24v.403L22.084 5.24a.561.561 0 00-.213.538v13.498a.56.56 0 00.213.537l1.871 1.837v.403h-9.412v-.403l1.939-1.882c.19-.19.19-.246.19-.537V8.321l-5.389 13.688h-.728L4.28 8.321v9.174c-.052.385.076.774.347 1.052l2.521 3.058v.404H0v-.404l2.521-3.058c.27-.279.39-.67.325-1.052V6.887z\",\n    viewBox: \"0 0 24 24\",\n  },\n  mastodon: {\n    path: \"M11.19 12.195c2.016-.24 3.77-1.475 3.99-2.603.348-1.778.32-4.339.32-4.339 0-3.47-2.286-4.488-2.286-4.488C12.062.238 10.083.017 8.027 0h-.05C5.92.017 3.942.238 2.79.765c0 0-2.285 1.017-2.285 4.488l-.002.662c-.004.64-.007 1.35.011 2.091.083 3.394.626 6.74 3.78 7.57 1.454.383 2.703.463 3.709.408 1.823-.1 2.847-.647 2.847-.647l-.06-1.317s-1.303.41-2.767.36c-1.45-.05-2.98-.156-3.215-1.928a3.614 3.614 0 0 1-.033-.496s1.424.346 3.228.428c1.103.05 2.137-.064 3.188-.189zm1.613-2.47H11.13v-4.08c0-.859-.364-1.295-1.091-1.295-.804 0-1.207.517-1.207 1.541v2.233H7.168V5.89c0-1.024-.403-1.541-1.207-1.541-.727 0-1.091.436-1.091 1.296v4.079H3.197V5.522c0-.859.22-1.541.66-2.046.456-.505 1.052-.764 1.793-.764.856 0 1.504.328 1.933.983L8 4.39l.417-.695c.429-.655 1.077-.983 1.934-.983.74 0 1.336.259 1.791.764.442.505.661 1.187.661 2.046v4.203z\",\n  },\n  bluesky: {\n    path: \"M180 141.964C163.699 110.262 119.308 51.1817 78.0347 22.044C38.4971 -5.86834 23.414 -1.03207 13.526 3.43594C2.08093 8.60755 0 26.1785 0 36.5164C0 46.8542 5.66748 121.272 9.36416 133.694C21.5786 174.738 65.0603 188.607 105.104 184.156C107.151 183.852 109.227 183.572 111.329 183.312C109.267 183.642 107.19 183.924 105.104 184.156C46.4204 192.847 -5.69621 214.233 62.6582 290.33C137.848 368.18 165.705 273.637 180 225.702C194.295 273.637 210.76 364.771 295.995 290.33C360 225.702 313.58 192.85 254.896 184.158C252.81 183.926 250.733 183.645 248.671 183.315C250.773 183.574 252.849 183.855 254.896 184.158C294.94 188.61 338.421 174.74 350.636 133.697C354.333 121.275 360 46.8568 360 36.519C360 26.1811 357.919 8.61012 346.474 3.43851C336.586 -1.02949 321.503 -5.86576 281.965 22.0466C240.692 51.1843 196.301 110.262 180 141.964Z\",\n    viewBox: \"0 0 360 320\",\n  },\n};\n\nexport { icons };\n","import { icons } from \"@/constants/icons\";\n\nconst getIcon = (name: keyof typeof icons) => icons[name] || {};\n\nexport { getIcon };\n","// extracted by mini-css-extract-plugin\nexport var item = \"sidebar-contacts-module--item--1f6f2\";\nexport var link = \"sidebar-contacts-module--link--8ba2a\";\nexport var list = \"sidebar-contacts-module--list--cbda4\";\nexport var sidebarContacts = \"sidebar-contacts-module--sidebar-contacts--bbb62\";","import React, { type FC } from \"react\";\n\nimport { Icon } from \"@/components/icon\";\nimport { icons } from \"@/constants/icons\";\nimport { getIcon } from \"@/utils/get-icon\";\nimport { getContactHref } from \"@/utils/get-contact-href\";\n\nimport * as styles from \"./sidebar-contacts.module.scss\";\n\ntype SidebarContactsProps = {\n  contacts: {\n    name: keyof typeof icons;\n    contact: string;\n  }[];\n};\n\nconst SidebarContacts: FC<SidebarContactsProps> = ({ contacts }) => {\n  return (\n    contacts.length > 0 && (\n      <div className={styles.sidebarContacts}>\n        <ul className={styles.list}>\n          {contacts.map(\n            ({ name, contact }) => (\n              <li className={styles.item} key={name}>\n                {name === \"email\" ? (\n                  <span\n                    className={styles.link}\n                    onClick={() => {\n                      window.location.href = \"mailto:\" + atob(getContactHref(name, contact));\n                    }}\n                  >\n                    <Icon name={name} icon={getIcon(name)} />\n                  </span>\n                ) : (\n                  <a\n                    target=\"_blank\"\n                    className={styles.link}\n                    href={getContactHref(name, contact)}\n                    rel={`noopener noreferrer${name === \"mastodon\" ? \" me\" : \"\"}`}\n                  >\n                    <Icon name={name} icon={getIcon(name)} />\n                  </a>\n                )}\n              </li>\n            ),\n          )}\n        </ul>\n      </div>\n    )\n  );\n};\n\nexport { SidebarContacts };\n","import React, { type FC } from \"react\";\n\nimport * as styles from \"./sidebar-copyright.module.scss\";\n\ntype SidebarCopyrightProps = {\n  copyright: string;\n};\n\nconst SidebarCopyright: FC<SidebarCopyrightProps> = ({ copyright }) => (\n  <div className={styles.sidebarCopyright}>{copyright}</div>\n);\n\nexport { SidebarCopyright };\n","// extracted by mini-css-extract-plugin\nexport var sidebarCopyright = \"sidebar-copyright-module--sidebar-copyright--97d08\";","import React, { type FC } from \"react\";\n\nimport { useSiteMetadata } from \"@/hooks/use-site-metadata\";\n\nimport { SidebarMenu } from \"@/components/sidebar-menu\";\nimport { SidebarAuthor } from \"@/components/sidebar-author\";\nimport { SidebarContacts } from \"@/components/sidebar-contacts\";\nimport { SidebarCopyright } from \"@/components/sidebar-copyright\";\n\nimport * as styles from \"./sidebar.module.scss\";\n\ntype SidebarProps = {\n  isHome?: boolean;\n};\n\nconst Sidebar: FC<SidebarProps> = ({ isHome }) => {\n  const { author, copyright, menu } = useSiteMetadata();\n\n  return (\n    <div className={styles.sidebar}>\n      <div className={styles.inner}>\n        <SidebarAuthor author={author} isHome={isHome} />\n        <SidebarMenu menu={menu} />\n        <SidebarContacts contacts={author.contacts} />\n        <SidebarCopyright copyright={copyright} />\n      </div>\n    </div>\n  );\n};\n\nexport { Sidebar };\n","// extracted by mini-css-extract-plugin\nexport var inner = \"sidebar-module--inner--f87a4\";\nexport var sidebar = \"sidebar-module--sidebar--58428\";","// extracted by mini-css-extract-plugin\nexport var button = \"theme-switcher-module--button--1cdf0\";\nexport var dark = \"theme-switcher-module--dark--fca2d\";\nexport var moon = \"theme-switcher-module--moon--f9082\";\nexport var sun = \"theme-switcher-module--sun--65dc4\";\nexport var themeSwitcher = \"theme-switcher-module--themeSwitcher--8bcb4\";","import React, { type FC, useEffect, useState } from \"react\";\n\nimport cn from \"classnames\";\n\nimport { useTheme } from \"@/hooks/use-theme\";\n\nimport * as styles from \"./theme-switcher.module.scss\";\n\nconst ThemeSwitcher: FC = () => {\n  const [{ mode }, toggleTheme] = useTheme();\n  const [isClient, setIsClient] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsClient(typeof window !== \"undefined\");\n  }, []);\n\n  if (!isClient) {\n    return null;\n  }\n\n  return (\n    <div\n      className={cn(styles.themeSwitcher, {\n        [styles.dark]: mode === \"dark\",\n      })}\n    >\n      <button className={styles.button} onClick={toggleTheme}>\n        <svg\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        >\n          <title>{mode}</title>\n          <path\n            pathLength=\"1\"\n            className={styles.moon}\n            d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"\n          />\n          <circle pathLength=\"1\" className={styles.sun} cx=\"12\" cy=\"12\" r=\"5\" />\n          <line\n            pathLength=\"1\"\n            className={styles.sun}\n            x1=\"12\"\n            y1=\"1\"\n            x2=\"12\"\n            y2=\"3\"\n          />\n          <line\n            pathLength=\"1\"\n            className={styles.sun}\n            x1=\"12\"\n            y1=\"21\"\n            x2=\"12\"\n            y2=\"23\"\n          ></line>\n          <line\n            pathLength=\"1\"\n            className={styles.sun}\n            x1=\"4.22\"\n            y1=\"4.22\"\n            x2=\"5.64\"\n            y2=\"5.64\"\n          />\n          <line\n            pathLength=\"1\"\n            className={styles.sun}\n            x1=\"18.36\"\n            y1=\"18.36\"\n            x2=\"19.78\"\n            y2=\"19.78\"\n          />\n          <line\n            pathLength=\"1\"\n            className={styles.sun}\n            x1=\"1\"\n            y1=\"12\"\n            x2=\"3\"\n            y2=\"12\"\n          />\n          <line\n            pathLength=\"1\"\n            className={styles.sun}\n            x1=\"21\"\n            y1=\"12\"\n            x2=\"23\"\n            y2=\"12\"\n          />\n          <line\n            pathLength=\"1\"\n            className={styles.sun}\n            x1=\"4.22\"\n            y1=\"19.78\"\n            x2=\"5.64\"\n            y2=\"18.36\"\n          />\n          <line\n            pathLength=\"1\"\n            className={styles.sun}\n            x1=\"18.36\"\n            y1=\"5.64\"\n            x2=\"19.78\"\n            y2=\"4.22\"\n          />\n        </svg>\n      </button>\n    </div>\n  );\n};\n\nexport { ThemeSwitcher };\n","const getContactHref = (name: string, contact: string) => {\n  const hrefs: { [key: string]: string } = {\n    mastodon: `${contact}`,\n    email: btoa(contact) || \"\",\n    line: `line://ti/p/${contact}`,\n    x: `https://www.x.com/${contact}`,\n    telegram: `https://t.me/${contact}`,\n    vkontakte: `https://vk.com/${contact}`,\n    medium: `https://medium.com/${contact}`,\n    github: `https://github.com/${contact}`,\n    weibo: `https://www.weibo.com/${contact}`,\n    gitlab: `https://www.gitlab.com/${contact}`,\n    codepen: `https://www.codepen.io/${contact}`,\n    soundcloud: `https://soundcloud.com/${contact}`,\n    facebook: `https://www.facebook.com/${contact}`,\n    instagram: `https://www.instagram.com/${contact}`,\n    linkedin: `https://www.linkedin.com/in/${contact}`,\n    youtube: `https://www.youtube.com/channel/${contact}`,\n    bluesky: `https://bsky.app/profile/${contact}.bsky.social`,\n  };\n\n  return hrefs[name] ?? contact;\n};\n\nexport { getContactHref };\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nimport { type SiteMetadata } from \"@/types/site-metadata\";\n\nconst useSiteMetadata = () => {\n  const { site } = useStaticQuery<SiteMetadata>(graphql`\n    query SiteMetaData {\n      site {\n        siteMetadata {\n          author {\n            title\n            photo\n            description\n            contacts {\n              name\n              contact\n            }\n          }\n          menu {\n            title\n            url\n          }\n          url\n          title\n          copyright\n          description\n        }\n      }\n    }\n  `);\n\n  return site?.siteMetadata || {};\n};\n\nexport { useSiteMetadata };\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import React, { type FC } from \"react\";\n\ninterface MetaProps {\n  description: string;\n  image?: string;\n  title: string;\n}\n\nconst Meta: FC<MetaProps> = ({ description, title, image }) => (\n  <>\n    <title>{title}</title>\n    <meta name=\"description\" content={description} />\n    <meta name=\"twitter:card\" content=\"summary_large_image\" />\n    <meta name=\"twitter:title\" content={title} />\n    <meta name=\"twitter:description\" content={description} />\n    <meta name=\"og:title\" content={title} />\n    <meta name=\"og:type\" content=\"website\" />\n    <meta name=\"og:description\" content={description} />\n\n    {image ? (\n      <>\n        <meta name=\"image\" content={image} />\n        <meta name=\"og:image\" content={image} />\n        <meta name=\"twitter:image\" content={image} />\n      </>\n    ) : null}\n  </>\n);\n\nexport { Meta };\n","import React, { type FC, type ReactNode, useEffect } from \"react\";\n\nimport { useTheme } from \"@/hooks/use-theme\";\n\nimport * as styles from \"./layout.module.scss\";\n\ninterface LayoutProps {\n  children: ReactNode;\n}\n\nconst Layout: FC<LayoutProps> = ({ children }) => {\n  const [{ mode }] = useTheme();\n\n  useEffect(() => {\n    document.documentElement.className = mode;\n  }, [mode]);\n\n  return <div className={styles.layout}>{children}</div>;\n};\n\nexport { Layout };\n","// extracted by mini-css-extract-plugin\nexport var layout = \"layout-module--layout--e08e0\";","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import { useEffect, useLayoutEffect, useRef, useCallback, useState } from 'react';\n\nconst useIsomorphicLayoutEffect = typeof window === \"undefined\" ? useEffect : useLayoutEffect;\n\nfunction useEventListener(eventName, handler, element, options) {\n    const savedHandler = useRef(handler);\n    useIsomorphicLayoutEffect(() => {\n        savedHandler.current = handler;\n    }, [handler]);\n    useEffect(() => {\n        var _a;\n        const targetElement = (_a = element === null || element === void 0 ? void 0 : element.current) !== null && _a !== void 0 ? _a : window;\n        if (!(targetElement && targetElement.addEventListener))\n            return () => { };\n        const listener = event => savedHandler.current(event);\n        targetElement.addEventListener(eventName, listener, options);\n        return () => {\n            targetElement.removeEventListener(eventName, listener, options);\n        };\n    }, [eventName, element, options]);\n}\n\nfunction useEventCallback(fn) {\n    const ref = useRef(() => {\n        throw new Error(\"cannot call an event handler while rendering\");\n    });\n    useIsomorphicLayoutEffect(() => {\n        ref.current = fn;\n    }, [fn]);\n    return useCallback((...args) => ref.current(...args), [ref]);\n}\n\nconst parseJSON = (value) => {\n    try {\n        return value === \"undefined\" ? undefined : JSON.parse(value !== null && value !== void 0 ? value : \"\");\n    }\n    catch (_a) {\n        console.warn(\"Unable to parse value:\", value);\n        return undefined;\n    }\n};\nconst useLocalStorage = (key, initialValue, options = {}) => {\n    const readValue = useCallback(() => {\n        if (typeof window === \"undefined\") {\n            return initialValue;\n        }\n        try {\n            const item = window.localStorage.getItem(key);\n            if (options === null || options === void 0 ? void 0 : options.raw) {\n                return item;\n            }\n            if (options === null || options === void 0 ? void 0 : options.deserializer) {\n                return item ? options.deserializer(item) : initialValue;\n            }\n            return item ? parseJSON(item) : initialValue;\n        }\n        catch (error) {\n            console.warn(`Unable to get value for key \"${key}\":`, error);\n            return initialValue;\n        }\n    }, [initialValue, key, options]);\n    const [storedValue, setStoredValue] = useState(readValue);\n    const setValue = useEventCallback(value => {\n        if (typeof window === \"undefined\") {\n            return;\n        }\n        try {\n            const newValue = value instanceof Function ? value(storedValue) : value;\n            if (options === null || options === void 0 ? void 0 : options.raw) {\n                window.localStorage.setItem(key, newValue);\n            }\n            else if (options === null || options === void 0 ? void 0 : options.serializer) {\n                window.localStorage.setItem(key, options.serializer(newValue));\n            }\n            else {\n                window.localStorage.setItem(key, JSON.stringify(newValue));\n            }\n            setStoredValue(newValue);\n            window.dispatchEvent(new Event(\"local-storage\"));\n        }\n        catch (error) {\n            console.warn(`Unable to store value for key \"${key}\":`, error);\n        }\n    });\n    useEffect(() => {\n        setStoredValue(readValue());\n    }, []);\n    const handleStorageChange = useCallback((event) => {\n        if ((event === null || event === void 0 ? void 0 : event.key) && event.key !== key) {\n            return;\n        }\n        setStoredValue(readValue());\n    }, [key, readValue]);\n    useEventListener(\"storage\", handleStorageChange);\n    useEventListener(\"local-storage\", handleStorageChange);\n    return [storedValue, setValue];\n};\n\nfunction useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(() => {\n        const timer = setTimeout(() => setDebouncedValue(value), delay !== null && delay !== void 0 ? delay : 500);\n        return () => {\n            clearTimeout(timer);\n        };\n    }, [value, delay]);\n    return debouncedValue;\n}\n\nexport { useDebounce, useEventCallback, useEventListener, useIsomorphicLayoutEffect, useLocalStorage };\n//# sourceMappingURL=react-hooks.es5.js.map\n","import { useCoilState } from '@alxshelepenok/diesel';\nimport { useLocalStorage } from '@alxshelepenok/react-hooks';\n\nconst toKebabCase = (str = \"\") => {\n    var _a;\n    return ((_a = str\n        .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)) === null || _a === void 0 ? void 0 : _a.map(word => word.toLowerCase()).join(\"-\")) || \"\";\n};\n\nconst useCoilPersistedState = (coilValue, keyPrefix = \"diesel:\") => {\n    const [value, setValue] = useCoilState(coilValue);\n    const [persistedValue, setPersistedValue] = useLocalStorage(keyPrefix.concat(toKebabCase(coilValue.key)), value);\n    return [\n        persistedValue,\n        (nextValue) => {\n            setPersistedValue(nextValue);\n            return setValue(value);\n        },\n    ];\n};\n\nexport { useCoilPersistedState };\n//# sourceMappingURL=diesel-extensions.es5.js.map\n","import { atom } from \"@alxshelepenok/diesel\";\nimport { useCoilPersistedState } from \"@alxshelepenok/diesel-extensions\";\n\nimport { getDefaultColorMode } from \"@/utils/get-default-color-mode\";\n\ninterface Theme {\n  mode: \"dark\" | \"light\";\n}\n\nexport const themeAtomKey = \"diesel:theme-atom\";\n\nconst themeAtom = atom<Theme>({\n  key: \"themeAtom\",\n  default: {\n    mode: getDefaultColorMode(),\n  },\n});\n\nconst useTheme = (): readonly [Theme, () => void] => {\n  const [theme, set] = useCoilPersistedState(themeAtom);\n\n  const toggle = () => set({ mode: theme.mode === \"dark\" ? \"light\" : \"dark\" });\n\n  return [theme, toggle];\n};\n\nexport { useTheme };\n","const getDefaultColorMode = (): \"dark\" | \"light\" => {\n  if (typeof window === \"undefined\") {\n    return \"light\";\n  }\n\n  const mql = window.matchMedia(\"(prefers-color-scheme: dark)\");\n  const hasMediaQueryPreference = typeof mql.matches !== \"undefined\";\n\n  if (hasMediaQueryPreference) {\n    return mql.matches ? \"dark\" : \"light\";\n  }\n\n  return \"light\";\n};\n\nexport { getDefaultColorMode };\n","import React, { type FC, type ReactNode } from \"react\";\n\nimport * as styles from \"./page.module.scss\";\n\ninterface PageProps {\n  title?: string;\n  children: ReactNode;\n}\n\nconst Page: FC<PageProps> = ({ title, children }) => {\n  return (\n    <div className={styles.page}>\n      <div className={styles.inner}>\n        {title && <h1 className={styles.title}>{title}</h1>}\n        <div className={styles.body}>{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport { Page };\n","// extracted by mini-css-extract-plugin\nexport var body = \"page-module--body--91ea2\";\nexport var inner = \"page-module--inner--bbb89\";\nexport var page = \"page-module--page--aeaf7\";\nexport var title = \"page-module--title--3f843\";"],"names":["SidebarMenu","_ref","menu","React","className","map","item","key","url","Link","to","activeClassName","title","Image","path","rest","StaticQuery","query","render","data","images","edges","image","find","_ref2","node","absolutePath","includes","childImageSharp","GatsbyImage","Object","assign","gatsbyImageData","SidebarAuthor","author","isHome","alt","photo","styles","ThemeSwitcher","description","Icon","name","icon","viewBox","d","icons","x","facebook","telegram","github","email","rss","linkedin","instagram","line","gitlab","weibo","codepen","youtube","soundcloud","medium","mastodon","bluesky","getIcon","SidebarContacts","contacts","length","contact","onClick","window","location","href","atob","getContactHref","target","rel","SidebarCopyright","copyright","Sidebar","useSiteMetadata","dark","sun","mode","toggleTheme","useTheme","isClient","setIsClient","useState","useEffect","cn","width","height","fill","strokeWidth","strokeLinecap","strokeLinejoin","pathLength","cx","cy","r","x1","y1","x2","y2","_hrefs$name","btoa","vkontakte","site","useStaticQuery","siteMetadata","W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","z","e","t","a","i","s","style","P","h","loading","shouldLoad","opacity","A","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","role","src","G","children","u","V","B","U","srcSet","decoding","Y","fallback","sources","sizes","_ref6","media","type","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","replace","ae","_len","arguments","Array","_key","c","apply","concat","ie","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","m","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","trim","filter","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","slice","preserveCamelCase","lastIndex","m1","charAt","_","identifier","postProcess","module","exports","Meta","content","Layout","document","documentElement","hasOwn","hasOwnProperty","classNames","classes","arg","appendClass","parseValue","toString","call","value","newClass","default","useIsomorphicLayoutEffect","useLayoutEffect","useEventListener","eventName","handler","element","savedHandler","useRef","_a","targetElement","listener","event","useLocalStorage","initialValue","readValue","useCallback","localStorage","getItem","raw","deserializer","undefined","parse","parseJSON","error","storedValue","setStoredValue","setValue","fn","args","useEventCallback","newValue","Function","setItem","serializer","dispatchEvent","Event","handleStorageChange","themeAtom","atom","getDefaultColorMode","mql","matchMedia","matches","theme","set","coilValue","keyPrefix","persistedValue","setPersistedValue","str","match","word","toKebabCase","nextValue","useCoilPersistedState","toggle","Page"],"sourceRoot":""}